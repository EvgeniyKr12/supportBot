import asyncio
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy.orm import Session

from models import UserType
from services import UserService, DirectionService


async def notify_admins(bot, chat_id: int, text: str, db: Session):
    builder = InlineKeyboardBuilder()
    builder.button(text="üìå –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f"take_dialog_{chat_id}")
    markup = builder.as_markup()

    user_service = UserService(db)
    direction_service = DirectionService(db)

    user = user_service.get_user(chat_id)
    privileged_users = user_service.get_privileged_users()

    if not user:
        return

    direction = direction_service.get_direction_by_id(user.direction_id) if user.direction_id else None

    if user.type == UserType.PARENT:
        user_type_text = "–†–æ–¥–∏—Ç–µ–ª—å"

    if user.type == UserType.APPLICANT:
        user_type_text = "–ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç"

    if user.type == UserType.OTHER:
        user_type_text = "–î—Ä—É–≥–æ–µ"


    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info = (
        f"üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
        f"üÜî ID: {user.tg_id}\n"
        f"üë§ Username: @{user.username or '‚Äî'}\n"
        f"üéØ –¢–∏–ø: {user_type_text if user.type else '–ù–µ –≤—ã–±—Ä–∞–Ω'}\n"
        f"üìò –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction.name if direction else '–ù–µ –≤—ã–±—Ä–∞–Ω–æ'}\n\n"
        f"üí¨ –í–æ–ø—Ä–æ—Å: {text}"
    )

    await asyncio.gather(
        *[
            bot.send_message(
                admin.tg_id,
                user_info,
                reply_markup=markup,
            )
            for admin in privileged_users
        ]
    )
